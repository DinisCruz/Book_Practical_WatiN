## Using 'Amazon S3 Browser' script to upload files to Amazon S3

If you have an Amazon S3 account ([http://aws.amazon.com/s3/](http://aws.amazon.com/s3/)) then you might find useful to use the 'Amazon S3 Browser.h2' script to upload files to the S3 servers (you can also create folders and delete files) ![](images/tmp3810-tmp.jpeg) To upload files, select the target foldder (top left treeview) and  just drop the desired file on the the bottom left treeview (the red color indicates that the file is being uploaded) ![](images/tmpa582-tmp.jpeg) When the upload has completed, the bottom treeview will refresh and show the uploaded file there: ![](images/tmpde9a-tmp.jpeg) To get the link to the file, click on it and copy it from the top right textbox ![](images/tmp7fae-tmp.jpeg) For small files (like images or html files) you can get a quick preview by selecting the 'Auto Preview Selected File' checkbox ![](images/tmpea3b-tmp.jpeg) Note that when you upload files using this GUI/Script the file permission will be set to public (the default is to make it private). The '[Amazon S3 Browser.h2](http://code.google.com/p/o2platform/source/browse/trunk/O2_Scripts/APIs/Amazon/Amazon+S3+Browser.h2)' script (shown below) consumes the [API_AmazonS3.cs file](http://code.google.com/p/o2platform/source/browse/trunk/O2_Scripts/APIs/Amazon/API_AmazonS3.cs) and is mainly focused on building the GUI: [sourcecode language="csharp" wraplines="false"] //O2Ref:WatiN.Core.1x.dll var topPanel = O2Gui.open<Panel>("Amazon S3 Browser",700,400); var autoPreviewSelectedFile = false; var amazonS3 = new API_AmazonS3();  </pre> &nbsp; topPanel.add_Label("Logging in to S3", 150,300); amazonS3.login(); topPanel.clear(); var statusLabel = topPanel.parentForm().add_StatusStrip();  statusLabel.set_Text("Welcome to O2's Amazon S3 Browser (click on folder to see files)"); var foldersTreeView = topPanel.add_TreeView()                            .showSelection();                            var previewArea = foldersTreeView.insert_Right<Panel>(topPanel.width() /2 ).add_1x1("Selected File Url", "Selected File Contents",false, 65) ; var previewPanel = previewArea[1]; var selectFile = previewArea[0].add_TextBox().fill(); previewArea[0].add_CheckBox("Auto Preview selected File (to see single files just press enter above)",40,4, (value) => autoPreviewSelectedFile = value).autoSize();  var filesTreeView = foldersTreeView.insert_Below<TreeView>(topPanel.height()/2)                                    .showSelection();   MethodInvoker refreshFolders =     ()=>{             foldersTreeView.clear();             foldersTreeView.add_Nodes(amazonS3.folders());         };         MethodInvoker refreshFileView =     ()=>{             amazonS3.showFilesInTreeView(filesTreeView, foldersTreeView.selected().get_Text());                    };                                           foldersTreeView.insert_Below<Panel>(25)                  .add_LabelAndTextAndButton("New folder name:", "", "create",                            (newFolderName)=>                                {                                 statusLabel.set_Text("Creating folder:{0}".format(newFolderName));                                    if (amazonS3.create_Folder(newFolderName).valid())                                    {                                        foldersTreeView.clear();                                                                           foldersTreeView.add_Nodes(amazonS3.folders());                                       };                                }); filesTreeView.onDrop(     (fileOrFolder)=>{                         if (fileOrFolder.isFile())                         {                             filesTreeView.backColor(Color.LightPink);                             O2Thread.mtaThread(                                 ()=>{                                         statusLabel.set_Text("adding file:{0}".format(fileOrFolder));                                         var currentFolder = foldersTreeView.selected().get_Text();                                         amazonS3.add_S3_Object(currentFolder, fileOrFolder);                                         amazonS3.showFilesInTreeView(filesTreeView, currentFolder);                                                                    statusLabel.set_Text("Done");                                         filesTreeView.backColor(Color.White);                                     });                         }                                                 });    var foldersContextMenu = foldersTreeView.add_ContextMenu(); var filesContextMenu = filesTreeView.add_ContextMenu(); //menu actions  foldersContextMenu.add_MenuItem("Delete Folder",                              ()=>{                                     var folderToDelete = foldersTreeView.selected().get_Text();                                     if ("Are you sure you want to Delete the folder: {0}".format(folderToDelete).askUserQuestion())                                         if (amazonS3.delete_Folder(folderToDelete).valid())                                                                               {                                             statusLabel.set_Text("Deleting folder:{0}".format(folderToDelete));                                                refreshFolders();                                            }                                 });   filesContextMenu.add_MenuItem("Delete File",                              ()=>{                                     //filesTreeView.SelectedNode =                                     var currentFolder = foldersTreeView.selected().get_Text();                                     var fileToDelete = filesTreeView.selected().get_Text();                                     if ("Are you sure you want to Delete the file: {0}".format(fileToDelete).askUserQuestion())                                                                        {                                         statusLabel.set_Text("Deleting File:{0}".format(fileToDelete));                                         if (amazonS3.delete_File(currentFolder, fileToDelete).valid())                                                                                   amazonS3.showFilesInTreeView(filesTreeView, currentFolder);                                     }                                 }); // events foldersTreeView.afterSelect<string>(     (folder) =>{                     statusLabel.set_Text("Showing files in folder: {0}".format(folder));                     refreshFileView();                 }); filesTreeView.afterSelect<Uri>(     (uri)=>    {                                var url = uri.str();                 "url: {0}".info(url);                 statusLabel.set_Text("Showing details for file: {0} ".format(url));                 selectFile.set_Text(url);                                if (autoPreviewSelectedFile)                     amazonS3.showFileInControl(previewPanel, uri);                                                    }); selectFile.onEnter(     (url)=> {                                amazonS3.showFileInControl(previewPanel, url.uri());                     }); // ContextMenu filesContextMenu.add_MenuItem("Refresh", refreshFileView); var folders = amazonS3.folders(); foldersTreeView.add_Nodes(folders);    amazonS3.showFilesInTreeView(filesTreeView,""); return "done"; //using O2.External.IE.ExtensionMethods //O2File:API_AmazonS3.cs //O2Ref:AWSSDK.dll //O2Ref:O2_External_IE.dll //O2Ref:System.Xml.dll //O2Ref:System.Xml.Linq.dll [/sourcecode]  
